
"""Find the largest product of 13 adjacent digits in this 1000-digit number"""

import time
start_time = time.time()

number = "73167176531330624919225119674426574742355" \
         "34919493496983520312774506326239578318016" \
         "98480186947885184385861560789112949495459" \
         "50173795833195285320880551112540698747158" \
         "52386305071569329096329522744304355766896" \
         "64895044524452316173185640309871112172238" \
         "31136222989342338030813533627661428280644" \
         "44866452387493035890729629049156044077239" \
         "07138105158593079608667017242712188399879" \
         "79087922749219016997208880937766572733300" \
         "10533678812202354218097512545405947522435" \
         "25849077116705560136048395864467063244157" \
         "22155397536978179778461740649551492908625" \
         "69321978468622482839722413756570560574902" \
         "61407972968652414535100474821663704844031" \
         "99890008895243450658541227588666881164271" \
         "71479924442928230863465674813919123162824" \
         "58617866458359124566529476545682848912883" \
         "14260769004224219022671055626321111109370" \
         "54421750694165896040807198403850962455444" \
         "36298123098787992724428490918884580156166" \
         "09791913387549920052406368991256071760605" \
         "88611646710940507754100225698315520005593" \
         "57297257163626956188267042825248360082325" \
         "7530420752963450 "

max_sum = 0
for i in range(len(number) - 13):
    current_sum = 1
    for x in [int(x) for x in (number[i:i+13])]:
        current_sum *= x
    if current_sum > max_sum:
        max_sum = current_sum

print(f"{max_sum} found in {time.time() - start_time} seconds")

